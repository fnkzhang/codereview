folderRoutes module
*******************

folderRoutes.createFolder(proj_id, commit_id)

   "POST /api/Folder/<proj_id>/<commit_id>/"

   **Explanation:**
      Creates a folder in a project's commit with the given name and
      parent folder. Enforces permissions through credentials given in
      Authorization header.

   **Args:**
      * proj_id (str): project you're making the folder in

      * commit_id (str): commit this action is taking place on

      * request.body (dict):
           * folder_name (str): name of the folder

           * parent_folder (str): folder you're making it in

   **Returns:**
      A dictionary containing the following keys:
         * success (bool): Indicates whether the operation was
           successful.

         * reason (str): Description of the success or failure reason.

         * body (str): Identifier of the created folder if successful.

folderRoutes.deleteFolder(folder_id, commit_id)

   "DELETE /api/Folder/<folder_id>/<commit_id>/"

   **Explanation:**
      Deletes the folder from the commit. Enforces permissions through
      credentials given in Authorization header.

   **Args:**
      * folder_id (str): folder you’re deleting

      * commit_id (str): commit this action is taking place on

   **Returns:**
      A dictionary containing the following keys:
         * success (bool): Indicates whether the operation was
           successful.

         * reason (str): Description of the success or failure reason.

folderRoutes.getFolder(proj_id, folder_id, commit_id)

   "GET /api/Folder/<proj_id>/<folder_id>/<commit_id>/"

   **Explanation:**
      Gets folder information from the given commit. Enforces
      permissions through credentials given in Authorization header.

   **Args:**
      * proj_id (str): folder you're moving

      * folder_id (str): project this folder is in

      * commit_id (str): commit this action is taking place on

   **Returns:**
      A dictionary containing the following keys:
         * success (bool): Indicates whether the operation was
           successful.

         * reason (str): Description of the success or failure reason.

         * body (dict): Information about the folder if successful.

folderRoutes.moveFolder(folder_id, commit_id)

   "POST /api/Folder/<folder_id>/<commit_id>/move/"

   **Explanation:**
      This endpoint moves a folder within a project's commit to
      another folder. Enforces permissions through credentials given
      in Authorization header.

   **Args:**
      * folder_id (str): folder you're moving

      * commit_id (str): commit this action is taking place on

      * request.body (dict):
           * parent_folder (str): folder you're moving it to

   **Returns:**
      A dictionary containing the following keys:
         * success (bool): Indicates whether the operation was
           successful.

         * reason (str): Description of the success or failure reason.

folderRoutes.renameFolder(folder_id, commit_id)

   "POST /api/Folder/<folder_id>/<commit_id>/rename/"

   **Explanation:**
      Renames the folder from the commit. Enforces permissions through
      credentials given in Authorization header.

   **Args:**
      * folder_id (str): folder you’re renaming

      * commit_id (str): commit this action is taking place on

      * request.body (dict):
           * folder_name (str): new name for folder

   **Returns:**
      A dictionary containing the following keys:
         * success (bool): Indicates whether the operation was
           successful.

         * reason (str): Description of the success or failure reason.
