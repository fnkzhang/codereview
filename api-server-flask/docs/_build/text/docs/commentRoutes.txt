commentRoutes module
********************

commentRoutes.createComment(snapshot_id)

   "POST /api/Snapshot/<snapshot_id>/comment/create"

   **Explanation:**
      Creates a top-level comment on the given snapshot. Enforces
      permissions through credentials given in Authorization header.

   **Args:**
      * snapshot_id (str): The ID of the snapshot.

      * request.body (dict):
           * author_email (str): The email of the author of the
             comment.

           * reply_to_id (int): The ID of the comment being replied
             to. Defaults to 0 if not specified.

           * content (str): The content of the comment.

           * highlight_start_x (int): The x-coordinate of the start of
             the highlighted area.

           * highlight_start_y (int): The y-coordinate of the start of
             the highlighted area.

           * highlight_end_x (int): The x-coordinate of the end of the
             highlighted area.

           * highlight_end_y (int): The y-coordinate of the end of the
             highlighted area.

           * is_resolved (bool): Indicates whether the comment is
             resolved.

   **Returns:**
      A dictionary containing the following keys:
         * success (bool): Indicates whether the comment creation was
           successful.

         * reason (str): Description of the result of the comment
           creation.

         * body (dict): Information about the created comment,
           including its ID, snapshot ID, author email, reply-to ID,
           content, highlight start and end coordinates, and
           resolution status.

commentRoutes.deleteComment(comment_id)

   "DELETE /api/comments/<comment_id>/delete"

   **Explanation:**
      Deletes a comment. Enforces permissions through credentials
      given in Authorization header.

   **Args:**
      * comment_id (str): The ID of the comment to delete.

   **Returns:**
      A dictionary containing the following keys:
         * success (bool): Indicates whether the delete operation was
           successful.

         * reason (str): Description of the result of the delete
           operation.

commentRoutes.editComment(comment_id)

   "PUT /api/comments/<comment_id>/edit"

   **Explanation:**
      Edits a comment. Enforces permissions through credentials given
      in Authorization header.

   **Args:**
      * comment_id (str): The ID of the comment to edit.

      * request.body (dict):
           * content (str): new contents of comment

   **Returns:**
      A dictionary containing the following keys:
         * success (bool): Indicates whether the edit operation was
           successful.

         * reason (str): Description of the result of the edit
           operation.

commentRoutes.resolveComment(comment_id)

   "PUT /api/comment/<comment_id>/resolve"

   **Explanation:**
      Resolves a given comment. Enforces permissions through
      credentials given in Authorization header.

   **Args:**
      * comment_id (str): The ID of the comment to resolve.

   **Returns:**
      A dictionary containing the following keys:
         * success (bool): Indicates whether the resolution operation
           was successful.

         * reason (str): Description of the result of the resolution
           operation.
